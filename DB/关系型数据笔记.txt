1.范式：
要设计规范化的数据库，就要求我们根据数据库的设计范式——也就是数据库设计的规范原则来做。范式可以指导我们更好地设计数据库的表结构，减少冗余的数据，借此可以提高数据库的存储效率，数据完整性和可扩展性。
设计数据库时，遵从不同的规范要求，设计出合理的关系型数据库，这些不同的规范被称为不同的范式，各种范式呈递次规范，越高的范式数据库冗余越小。目前关系数据库有六种范式：第一范式（1NF）、第二范式（2NF）、第三范式（3NF）、巴德斯科范式（BCNF）、第四范式（4NF）、第五范式（5NF，又称为完美范式）。一般来说，数据库设计只要满足第三范式即可。
2.三大范式：
2.1 第一范式：
第一范式是指在关系模型中，对列添加的一个规范要求，所有的列都应该是原子性的，即数据库表里的每一列都是不可分割的原子数据项，而不是集合、数组、记录等非原子数据项。即实体中的某个属性有多个值，必须拆分为不同的属性。在符合第一范式表中的每个域值只能是实体的一个属性或一个属性的一部分。简而言之，第一范式就是无重复的域。
2.2 第二范式：
在第一范式的基础上，非Key属性必须完全依赖于主键。第二范式（2NF）是在第一范式的基础上建立起来的，即满足第二范式（2NF）必须先满足第一范式（1NF）。第二范式要求数据库表里的每个实体或记录必须可以被唯一地区分。选取一个能区分每个实体的属性（如主键索引）或属性组（联合唯一索引），作为实体的唯一标识。
第二范式要求实体的属性完全依赖于关键字。所谓完全依赖是指不能存在仅依赖关键字一部分的属性，如果存在，那么这个属性和关键字的这一部分应该分离出来形成一个新的实体，新实体与原实体之间是一对多的关系。
为实现区分，通常需要为表加上一个列，以存储各个实例的唯一标识。简而言之，第二范式就是在第一范式的基础上属性完全依赖于主键。
2.3 第三范式：
第三范式是在第二范式基础上，更进一层，第三范式的目标就是确保表中各列与主键列直接相关，而不是间接相关。即各列与主键列都是一种直接依赖关系，则满足第三范式。
第三范式要求各列与主键列直接相关，我们可以这样理解，假设张三是李四的兵，王五则是张三的兵，这时王五是不是李四的兵呢?从这个关系中我们可以看出，王五也是李四的兵，因为王五依赖于张三，而张三是李四的兵，所以王五也是。这中间就存在一种间接依赖的关系而非我们第三范式中强调的直接依赖。
3.总结：
设计人员需要应用三大范式对数据库进行严格规范化，减少数据冗余，提高数据库可维护性和扩展性。但是在实际的数据库设计中，我们不能一味的追求规范化，既要考虑三大范式，减少数据冗余和各种数据库操作异常，又要充分考虑到数据库的性能问题，允许适当的数据库冗余。